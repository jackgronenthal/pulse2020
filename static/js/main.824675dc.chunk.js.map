{"version":3,"sources":["serviceWorker.js","Constants.js","components/register/other_major.js","components/register/register.js","Register.js","ParticleWrapper.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","FIRSTNAME","LASTNAME","EMAIL","SUBMIT","MAJOR","OTHER_MAJOR","POST_REGISTREE","MAJOR_LIST","MAJOR_LIST_CLASSNAME","OtherMajorButton","state","hidden","componentDidMount","setTimeout","_this","setState","render","react_default","a","createElement","Button","className","style","width","fontFamily","ref","onClick","props","triggedField","React","Component","Register","show_major_list","other_major","show_other_major","componentDidUpdate","prevProps","prevState","displayErr","forceUpdate","setStartTime","focusOnInput","currPrompt","C","refs","blur","focus","animateButtons","submitButton","otherPrompt","handleLateButtonPress","promptJSX","splice","length","setCurPrompt","focusOnOtherMajor","dimMajors","e","index","genMajorJSX","map","i","id","setInput","changeInput","target","innerText","filter","genJSX","renderedPrompts","includes","promptText","detailText","errText","errTextAlt","showDetails","paddingTop","Typist_default","avgTypingDelay","cursor","show","hideWhenDone","hideWhenDoneDelay","onTypingDone","marginTop","onSubmit","preventDefault","value","passRefs","type","spellCheck","onFocus","onChange","react_router_dom","to","submitForm","Delay","ms","class","role","display","color","updatePromptJSX","this","marginBottom","App","formStartTime","formEndTime","firstName","lastName","email","major","validEmail","modalIsOpen","JSX","slice","concat","indexOf","open","checkIfEmailExists","_callee","request","data","regenerator_default","wrap","_context","prev","next","Request","fetch","then","response","sent","abrupt","stop","displayEmailError","arguments","undefined","childrenRefs","email_row","classList","contains","add","remove","postRegistree","_callee2","body","h","options","_context2","name","Headers","append","method","headers","JSON","stringify","ok","json","catch","err","_callee3","_context3","t0","test","email_spinner","validateInput","toLowerCase","errMessage","errMessageAlt","modalToggle","_this2","Modal","isOpen","toggle","ModalHeader","ModalBody","href","register_register","Date","text","ParticleWrapper","particles_default","params","particles","number","density","enable","value_area","line_linked","opacity","move","direction","speed","size","anim","opacity_min","interactivity","events","onclick","mode","modes","push","particles_nb","retina_detect","Routes","basename","src_ParticleWrapper","react_router","exact","path","component","ReactDOM","index_es","src_Routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.824675dc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              \n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nexport const FIRSTNAME = \"What is your first name?\"\nexport const LASTNAME = \"What is your last name?\"\nexport const EMAIL = \"What is your email address?\"\nexport const SUBMIT = \"Would you like to submit your registration?\"\nexport const MAJOR = \"What is your major?\"\nexport const OTHER_MAJOR = \"other major\"\nexport const VERIFY_EMAIL = \"https://pulseapi2020.herokuapp.com/verify_email\"\nexport const POST_REGISTREE = \"https://pulseapi2020.herokuapp.com/register_attendee\"\nexport const MAJOR_LIST = [\n    \"Aerospace Engineering\",\n    \"Agricultural Engineering\",\n    \"Bioengineering\",\n    \"Chemical Engineering\",\n    \"Civil Engineering\",\n    \"Computer Engineering\",\n    \"Computer Science\",\n    \"Electrical Engineering\",\n    \"Engineering Mechanics\",\n    \"Engineering Physics\",\n    \"Industrial Engineering\",\n    \"Materials Science\",\n    \"Mechanical Engineering\",\n    \"Nuclear Engineering\",\n    \"Systems Engineering\"\n]\nexport const MAJOR_LIST_ABV = [\n    \"Computer Engineering\",\n    \"Electrical\",\n    \"Computer Science\",\n    \"Aerospace\",\n    \"Agricultural and Biological\",\n    \"Bioengineering\",\n    \"Chemical and Biomolecular\",\n    \"Civil and Environmental\",\n    \"Engineering Mechanics\",\n    \"Engineering Physics\",\n    \"Industrial\",\n    \"Materials Science\",\n    \"Mechanical Engineering\",\n    \"NPRE\",\n    \"Systems and Design\"\n]\n\nexport const MAJOR_LIST_CLASSNAME = \"col-sm-5 major_txt\"\nexport const MAJOR_LIST_STYLE = {cursor: \"pointer\"}","import React from 'react'\nimport { Button } from 'reactstrap'\n\nclass OtherMajorButton extends React.Component {\n    state = { hidden: true }\n    componentDidMount = () => {setTimeout(() => this.setState({hidden: false}), 2700)}\n    render = () => {\n        return (!this.state.hidden ? (<Button className=\"my-auto\" style={{width: \"100%\", fontFamily: \"monospace\"}} ref={\"other_major\"} onClick={() => {this.props.triggedField()}}>Other</Button>) : <div></div>)\n    }\n}\n\nexport default OtherMajorButton\n\n\n\n\n","/* eslint-disable default-case */\nimport React, { Component } from \"react\";\nimport Typist from \"react-typist\";\nimport * as C from \"../../Constants\";\nimport { Button, Spinner } from 'reactstrap'\nimport OtherMajorButton from './other_major'\nimport { Link } from 'react-router-dom';\n\nclass Register extends Component {\n\n    state = {\n      show_major_list: false,\n      other_major: false,\n      show_other_major: false\n    }\n\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if(prevProps.displayErr !== this.props.displayErr)\n            this.forceUpdate()\n        if(prevState.other_major !== this.state.other_major) {\n          this.forceUpdate();\n        }\n    }\n\n    componentDidMount = () => {\n        this.props.setStartTime()\n    }\n  \n    focusOnInput = () => {\n        if(this.props.currPrompt === C.MAJOR) {\n          this.refs[C.EMAIL].blur();\n        }\n        if(this.props.currPrompt !== C.SUBMIT && this.props.currPrompt !== C.MAJOR && this.props.currPrompt !== C.OTHER_MAJOR) {\n          this.refs[this.props.currPrompt].focus();\n        }\n            \n  };\n\n  animateButtons = () => {\n    this.setState({\n      submitButton: 'fade-in'\n    })\n  }\n\n  otherPrompt = () => {\n    this.setState({other_major: true})\n  }\n\n  handleLateButtonPress = () => {\n    if(this.props.currPrompt === C.SUBMIT) {\n      this.props.promptJSX.splice(this.props.promptJSX.length - 1, 1)\n      this.props.setCurPrompt(C.OTHER_MAJOR)\n      this.forceUpdate()\n    }\n  }\n\n  focusOnOtherMajor = () => {\n  }\n\n  dimMajors = e => {\n    for(let index = 0; index < C.MAJOR_LIST.length; index++) {\n      if(e != -1) {\n        if(C.MAJOR_LIST[index] === e ) {\n          this.refs[\"MAJOR_LIST_\"+C.MAJOR_LIST[index]].className = \"col-sm-5 major_txt\"\n        } else {\n          this.refs[\"MAJOR_LIST_\"+C.MAJOR_LIST[index]].className = \"col-sm-5 dim_major\"\n        }\n      } else {\n        this.refs[\"MAJOR_LIST_\"+C.MAJOR_LIST[index]].className = \"col-sm-5 dim_major\"\n      }\n    }\n  }\n\n  genMajorJSX = () => (\n    <div className=\"majors\">\n        <div ref=\"major_list\" className=\"transparent\">\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 0)})} \n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 1)})}\n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 2)})}\n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 3)})}\n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 4)})}\n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 5)})} \n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 6)})}\n          </div>\n          <div className=\"row\">\n            {C.MAJOR_LIST.map((e, i) => (<div className={C.MAJOR_LIST_CLASSNAME} ref={\"MAJOR_LIST_\" + e}  id={\"major\"} onClick={(e) => {this.props.setInput(e); this.props.changeInput(e.target.id, e.target.innerText); this.dimMajors(e.target.innerText);}}>{e}</div>)).filter((e, i) => {return ((i % 8) === 7)})}\n            <div className=\"col-sm-5\"><OtherMajorButton triggedField={() => {this.setState({show_other_major: !this.state.show_other_major}); this.props.setInput(C.OTHER_MAJOR); this.dimMajors(-1); this.handleLateButtonPress(); this.focusOnOtherMajor()}} /></div>\n          </div>\n        </div>\n    </div>\n  )\n\n  \n\n  genJSX = () => {\n    if(!this.props.renderedPrompts.includes(this.props.currPrompt)) \n    {\n    let promptText, detailText, errText, errTextAlt;\n    let showDetails = false\n    switch (this.props.currPrompt) {\n      case C.FIRSTNAME: {\n        promptText = (<p>What is your <strong>first name</strong>?</p>)\n        errText = \"Please enter your first name before continuing.\"\n        break\n      }\n\n      case C.LASTNAME: {\n        promptText = (<p>What is your <strong>last name</strong>?</p>);\n        errText = \"Please enter you last name before continuing.\"\n        break\n      }\n\n      case C.EMAIL: {\n        promptText = (<p>What is your <strong>email address</strong>?</p>)\n        showDetails = true\n        detailText = \"Emails will be used for checking into the Pulse 2020 conference as well as essential communciations.\"\n        errText = \"Hmm... that does not look like a valid email.\"\n        errTextAlt = (<p>Hmm... it appears that this email is already in use. <strong>This is a simulated error.</strong></p>)\n        break\n      }\n\n      case C.MAJOR: {\n        promptText = (<p>What is your <strong>major</strong>?</p>)\n        showDetails = true\n        detailText = \"Please select your major from the list below.\"\n        break\n      }\n\n      case C.OTHER_MAJOR: {\n        detailText = \"Please type in your major.\"\n        showDetails = true\n        break\n      }\n\n      case C.SUBMIT: {\n          promptText = (<p>Would you like to <strong><strike>submit your registration</strike></strong> visit my GitHub?</p>)\n          showDetails = false\n          errText = ''\n          break\n      }\n    }\n\n    let promptJSX = (\n      <div style={{paddingTop: \"25px\"}}>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Typist \n              avgTypingDelay={40}\n              cursor={{\n                show: false,\n                hideWhenDone: true,\n                hideWhenDoneDelay: 10\n              }}\n              onTypingDone={this.props.currPrompt !== C.SUBMIT ? () => this.focusOnInput() : () => this.animateButtons()}\n            >\n              {promptText}\n            </Typist>\n          </div>\n        </div>\n        {showDetails && \n          <div className=\"row\">\n            <div className=\"col\" id=\"details\">\n              <p className=\"fade-in\">/* {detailText} */</p>\n            </div>\n          </div>\n        }\n        <div className=\"row transparent\" ref=\"errMessage\">\n          <div className=\"col\" id=\"details\" style={{marginTop: '5px'}}>\n            <p className=\"fade-in\">/* {errText} */</p>\n          </div>\n        </div>\n        <div className=\"row transparent\" ref=\"errMessageAlt\">\n          <div className=\"col\" id=\"details\" style={{marginTop: '5px'}}>\n            <p className=\"fade-in\">/* {errTextAlt} */</p>\n          </div>\n        </div>\n        <div\n          className=\"row\"\n          ref={this.props.currPrompt === C.EMAIL ? \"email_row\" : \"\"}\n          id=\"input_row\"\n        >\n          <div className=\"col-sm-2\">\n            <p className=\"dollar\">pulse2020$</p>\n          </div>\n          <div className=\"col-sm-9\">\n            {this.props.currPrompt !== C.MAJOR ? (this.props.currPrompt !== C.SUBMIT ? (<form\n              onSubmit={e => {\n                e.preventDefault();\n                if(this.refs[this.props.currPrompt]) this.props.setInput(this.refs[this.props.currPrompt].value);\n                this.props.passRefs(this.refs);\n              }}\n            > {\n              (this.props.currPrompt === C.OTHER_MAJOR) ? (\n              <input\n                id={this.props.currPrompt}\n                ref={this.props.currPrompt}\n                type=\"text\"\n                spellCheck=\"false\"\n                onFocus={() => {this.dimMajors(-1)}}\n                onChange={(e) => this.props.changeInput(e.target.id, e.target.value)}\n                />\n              ) : (\n              <input\n                id={this.props.currPrompt}\n                ref={this.props.currPrompt}\n                type=\"text\"\n                spellCheck=\"false\"\n                onChange={(e) => this.props.changeInput(e.target.id, e.target.value)}\n              />\n              )\n            }\n              \n            </form>) : (<Link to='/'><Button ref={C.SUBMIT} id=\"submit_registration\" onClick={() => this.props.submitForm()}>Yes</Button></Link>)) :\n            <Typist\n              avgTypingDelay={40}\n              cursor={{\n                show: false,\n                hideWhenDone: true,\n                hideWhenDoneDelay: 10\n              }}\n              onTypingDone={() => {this.refs[\"cd_college_of_engineering_prompt\"].className=\"dollar\"}}\n              >\n              <Typist.Delay ms={1000} />\n              cd College of Engineering\n            </Typist>\n          }\n          </div>\n          {this.props.currPrompt === C.EMAIL && (<div className=\"col-sm-1\">\n            <div class=\"spinner-border\" role=\"status\" style={{display: 'none', color: '#fcb337'}} ref=\"email_spinner\">\n              <span class=\"sr-only\" >Loading...</span>\n            </div>\n          </div>)}\n          </div>\n          {this.props.currPrompt === C.MAJOR && (<div className=\"row\" style={{marginTop: \"-4rem\"}}>\n            <div className=\"col-sm-2\">\n              <p className=\"transparent\" ref=\"cd_college_of_engineering_prompt\">pulse2020$</p>\n            </div>\n            <div className=\"col-sm-10\">\n              <Typist\n                avgTypingDelay={100}\n                cursor={{\n                  show: false,\n                  hideWhenDone: true,\n                  hideWhenDoneDelay: 10\n                }}\n                onTypingDone={() => { this.refs[\"major_list\"].className = \"\"}}\n                >\n                <Typist.Delay ms={2500} />\n                ls\n              </Typist>\n            {this.genMajorJSX()}\n            </div>\n          </div>)}\n        </div>\n    );\n    this.props.updatePromptJSX(promptJSX);\n    }\n    \n  };\n\n  render() {\n    this.genJSX()\n    return (\n      <div className=\"container\" style={{marginBottom: '10rem'}} ref=\"registration_form\">\n        {this.props.promptJSX}\n      </div>\n    );\n  }\n}\n\nexport default Register;\n\n\n// Name email are required ","/* eslint-disable default-case */\r\nimport React, { Component } from 'react';\r\nimport Register from './components/register/register'\r\nimport * as C from './Constants'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    formStartTime: {},\r\n    formEndTime: {},\r\n    currPrompt: C.FIRSTNAME,\r\n    promptJSX: [],\r\n    renderedPrompts: [],\r\n    displayErr: false,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    major: '', \r\n    validEmail: null,\r\n    modalIsOpen: true\r\n  }\r\n\r\n  updatePromptJSX = JSX => {\r\n    let index;\r\n    let promptJSX = this.state.promptJSX.slice()\r\n    let renderedPrompts = this.state.renderedPrompts.slice().concat(this.state.currPrompt)\r\n    if(this.state.currPrompt === C.OTHER_MAJOR) {\r\n      if((index = renderedPrompts.indexOf(C.SUBMIT)) > -1) {\r\n        renderedPrompts.splice(index, 1)\r\n      }\r\n    }\r\n    this.setState({\r\n      promptJSX: promptJSX.concat(JSX),\r\n      renderedPrompts\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  submitForm = () => {\r\n    window.open(\"https://github.com/jackgronenthal/pulse2020\", \"_blank\")\r\n  }\r\n\r\n  checkIfEmailExists = async e => {\r\n    let request = new Request(\"https://reqres.in/api/users?delay=3\") // This is used to simulate an asynchronous DB interaction.\r\n    let data = await fetch(request)\r\n    .then((response) => {\r\n      return true // This was where legitamate email checking was made. However, this has been stripped.\r\n    })\r\n    return data\r\n  }\r\n\r\n  displayEmailError = (type = 'errMessage') => {\r\n    if(this.state.childrenRefs.email_row.classList.contains('inactive')) {\r\n      this.state.childrenRefs.email_row.classList.add('active')\r\n      this.state.childrenRefs.email_row.classList.remove('inactive')\r\n      this.state.childrenRefs[type].classList.remove('fade-out')\r\n    } else {\r\n      this.state.childrenRefs.email_row.classList.add('active')\r\n    }\r\n    this.state.childrenRefs[type].classList.remove('transparent')\r\n    this.state.childrenRefs[type].classList.add('fade-in')\r\n    this.setState({\r\n      displayErr: true\r\n    })\r\n  }\r\n\r\n  postRegistree = async () => {\r\n    let body = {email: this.state.childrenRefs[C.EMAIL].value, \r\n                name: this.state.firstName + ' ' + this.state.lastName,\r\n                major: this.state.major\r\n              }\r\n    // Create Heades\r\n    let h = new Headers()\r\n    h.append('Accept', 'application/json')\r\n    h.append('Content-Type', 'application/json')\r\n    let e = this.state\r\n    // Create Options\r\n    let options = {\r\n      method: 'POST', \r\n      headers: h,\r\n      body: JSON.stringify(body)\r\n    }\r\n    let request = new Request(C.POST_REGISTREE, options)\r\n    await fetch(request)\r\n    .then((response) => {\r\n      if(response.ok) {\r\n        return response.json()\r\n      } else {\r\n      }\r\n    })\r\n    .catch((err) => {\r\n    })\r\n  }\r\n\r\n  setInput = async e => {\r\n    switch(this.state.currPrompt) {\r\n      case C.FIRSTNAME: {\r\n        if (/^[A-Za-z\\s]+$/.test(e)) {\r\n          this.setState({\r\n            firstName: e,\r\n            currPrompt: C.LASTNAME,\r\n            displayErr: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            displayErr: true\r\n          })\r\n        }\r\n        break\r\n      }\r\n\r\n      case C.LASTNAME: {\r\n        if (/^[A-Za-z\\s]+$/.test(e)) {\r\n          this.setState({\r\n            lastName: e,\r\n            currPrompt: C.EMAIL,\r\n            displayErr: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            displayErr: true\r\n          })\r\n        }\r\n        break\r\n      }\r\n\r\n      case C.EMAIL: {\r\n        this.state.childrenRefs.email_spinner.style.display = ''\r\n        if(this.validateInput(e)) {\r\n          if(!( await this.checkIfEmailExists(e.toLowerCase()))) {\r\n            this.state.childrenRefs.email_spinner.style.display = 'none'\r\n            break\r\n          }\r\n          if(e !== this.state.email) {\r\n            this.state.childrenRefs.errMessage.classList.remove('fade-in')\r\n            this.state.childrenRefs.errMessage.classList.add('fade-out')\r\n            this.state.childrenRefs.errMessageAlt.classList.remove('fade-in')\r\n            this.state.childrenRefs.errMessageAlt.classList.add('fade-out')\r\n            if(this.state.childrenRefs.email_row.classList.contains('active')) {\r\n              this.state.childrenRefs.email_row.classList.remove('active')\r\n              this.state.childrenRefs.email_row.classList.add('inactive')\r\n            }\r\n            \r\n            this.setState({\r\n              email: e,\r\n              displayErr: false,\r\n              currPrompt: C.MAJOR\r\n            })\r\n          }\r\n        } else {\r\n          this.displayEmailError()\r\n        }\r\n        this.state.childrenRefs.email_spinner.style.display = 'none'\r\n        break\r\n      }\r\n\r\n      case C.MAJOR: {\r\n        if(e == C.OTHER_MAJOR) {\r\n          this.setState({\r\n            currPrompt: C.OTHER_MAJOR,\r\n            displayErr: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            currPrompt: C.SUBMIT,\r\n            major: e.target.innerText,\r\n            displayErr: false\r\n          })\r\n        }\r\n        break\r\n      }\r\n\r\n      case C.SUBMIT: {\r\n        this.setState({\r\n          displayErr: false\r\n        })\r\n        break\r\n      }\r\n\r\n      case C.OTHER_MAJOR: {\r\n        this.setState({\r\n          currPrompt: C.SUBMIT,\r\n          major: e\r\n        })\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  validateInput = email => {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  changeInput = (id, e) => {\r\n    switch(id) {\r\n      case C.FIRSTNAME: {\r\n        this.setState({\r\n          firstName: e\r\n        })\r\n        break;\r\n      }\r\n      case C.LASTNAME: {\r\n        this.setState({\r\n          lastName: e\r\n        })\r\n        break;\r\n      }\r\n\r\n      case C.OTHER_MAJOR: {\r\n        this.setState({\r\n          major: e\r\n        })\r\n        //this.pageScroll()\r\n        break;\r\n      }\r\n\r\n      case \"major\": {\r\n        this.setState({\r\n          major: e\r\n        })\r\n        //this.pageScroll()\r\n        break\r\n      }\r\n    }\r\n}\r\n\r\n  modalToggle = () => this.setState({ modalIsOpen: !this.state.modalIsOpen })\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={ this.state.modalIsOpen } toggle={this.modalToggle} >\r\n          <ModalHeader toggle={this.modalToggle} style={{color: \"black\"}}></ModalHeader>\r\n          <ModalBody style={{color: \"black\"}}> Hey There 👋 I hope you enjoy this purpose built registration form created by <a id=\"modal_link\" href=\"https://www.linkedin.com/in/jackgronenthal/\">Jack Gronenthal</a> for ECE Pulse, a technology conference hosted at <a id=\"modal_link\" href=\"https://ece.illinois.edu/\">UIUC</a>. Don't worry, we've had our fun and the conference has passed. Your responses won't be logged. </ModalBody>\r\n        </Modal>\r\n        <Register currPrompt={this.state.currPrompt}\r\n                  setCurPrompt={(e) => this.setState({currPrompt: e})} \r\n                  setInput={(e) => this.setInput(e)}\r\n                  promptJSX={this.state.promptJSX}\r\n                  updatePromptJSX={(JSX) => this.updatePromptJSX(JSX)}\r\n                  renderedPrompts={this.state.renderedPrompts}\r\n                  setStartTime={() => this.setState({formStartTime: new Date()})}\r\n                  passRefs={(refs) => this.setState({childrenRefs: refs})}\r\n                  displayErr={this.state.displayErr}\r\n                  submitForm={() => this.submitForm()}\r\n                  changeInput={(id, text) => this.changeInput(id, text) }\r\n                  />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nclass ParticleWrapper extends Component {\r\n    render() {\r\n        return (\r\n            <Particles className=\"particles\"\r\n                params={{\r\n                    \"particles\": {\r\n                        \"number\": {\r\n                            \"value\": 250,\r\n                            \"density\": {\r\n                                \"enable\": true,\r\n                                \"value_area\": 850\r\n                            }\r\n                        },\r\n                        \"line_linked\": {\r\n                            \"enable\": false,\r\n                            \"opacity\": 0.02\r\n                        },\r\n                        \"move\": {\r\n                            \"direction\": \"up\",\r\n                            \"speed\": 2\r\n                        },\r\n                        \"size\": {\r\n                            \"value\": 1\r\n                        },\r\n                        \"opacity\": {\r\n                            \"anim\": {\r\n                                \"enable\": true,\r\n                                \"speed\": 1,\r\n                                \"opacity_min\": 0.05\r\n                            }\r\n                        }\r\n                    },\r\n                    \"interactivity\": {\r\n                        \"events\": {\r\n                            \"onclick\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"push\"\r\n                            }\r\n                        },\r\n                        \"modes\": {\r\n                            \"push\": {\r\n                                \"particles_nb\": 1\r\n                            }\r\n                        }\r\n                    },\r\n                    \"retina_detect\": true\r\n                }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParticleWrapper;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport Register from './Register';\r\nimport ParticleWrapper from './ParticleWrapper';\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router basename=\"/pulse2020\">\r\n                    <div class=\"mainbody\">\r\n                        <ParticleWrapper />\r\n                        <Route exact path=\"/\" component={Register} />\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\nimport { LayersManager, Layer } from 'react-layers-manager'\nimport ParticleWrapper from './ParticleWrapper.js';\n\nReactDOM.render(\n    <LayersManager>\n        <Routes/>\n    </LayersManager>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}